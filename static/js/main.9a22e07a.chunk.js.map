{"version":3,"sources":["components/Header.js","components/JobForm.js","components/JobLine.js","components/ModuleLine.js","components/JobScript.js","components/ModuleButton.js","components/ModuleForm.js","components/Main.js","App.js","index.js","components/cpuModules.js","components/gpuModules.js"],"names":["Header","Fragment","className","href","JobForm","props","hidden","onClick","changeView","htmlFor","name","handlePartitionClick","type","onChange","handleEmailClick","handleCheckClick","check","handleGigClick","JobLine","prefix","value","ModuleLine","JobScript","PREFIX_TABLE","jobName","nodes","ntasks","ntasksNode","partition","qos","memory","output","error","email","emailEvent","nodelist","jobArray","gpu","requeue","job","renderSbatch","Object","keys","map","key","index","jobValue","length","join","toUpperCase","renderModule","modules","ModuleButton","buttonClass","includes","module","addModulefiles","ModuleForm","cpuModuleArray","cpuModules","gpuModuleArray","gpuModules","renderCpuModules","cpuModule","renderGpuModules","gpuModule","cpuBtn","gpuBtn","isModulesCpu","toggleCpuModules","toggleGpuModules","Main","state","isSbatch","sbatchHide","moduleHide","handleChange","bind","event","target","console","log","this","setState","buttons","inputEl","current","children","slice","btnCss","parentElement","stateEmail","filter","concat","handleEmailAllClick","React","Component","App","ReactDOM","render","document","getElementById","exports"],"mappings":"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","file":"static/js/main.9a22e07a.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const Header = () => {\n  return (\n    <React.Fragment>\n      <header>\n        <h1>saliksik slurm job generator</h1>\n        <div className=\"externalSites\">\n          <ul>\n            <li>\n              <a href=\"https://asti.dost.gov.ph/coare/servicedesk/pages/UI.php\">\n                User Portal\n              </a>\n            </li>\n            |\n            <li>\n              <a href=\"https://www.facebook.com/coare.project\">Facebook</a>\n            </li>\n            |\n            <li>\n              <a href=\"https://slurm.schedmd.com/documentation.html\">Slurm</a>\n            </li>\n          </ul>\n        </div>\n      </header>\n      <hr />\n      <p>\n        A Slurm job script generator configured for the COARE facility's compute\n        cluster, saliksik\n      </p>\n    </React.Fragment>\n  );\n};\n","import React from \"react\";\n\nfunction JobForm(props) {\n  return (\n    <div className={\"jobContainer jobForm \" + props.hidden}>\n      <div>\n        <div className=\"configTitle\">\n          <h3>SBATCH Configuration</h3>\n          <button className=\"btn viewBtn\" onClick={props.changeView}>\n            Load Modules\n          </button>\n        </div>\n\n        <label htmlFor=\"partition\" className=\"inputLabel\">\n          Partition\n        </label>\n        <div className=\"buttonGrp\">\n          <button\n            name=\"debug\"\n            className=\"btn\"\n            onClick={props.handlePartitionClick}\n          >\n            Debug\n          </button>\n          <button\n            name=\"batch\"\n            className=\"btn\"\n            onClick={props.handlePartitionClick}\n          >\n            Batch\n          </button>\n          <button\n            name=\"serial\"\n            className=\"btn\"\n            onClick={props.handlePartitionClick}\n          >\n            Serial\n          </button>\n          <button\n            name=\"gpu\"\n            className=\"btn\"\n            onClick={props.handlePartitionClick}\n          >\n            GPU\n          </button>\n        </div>\n      </div>\n      <div>\n        <label htmlFor=\"jobName\" className=\"inputLabel\">\n          Job name\n        </label>\n        <input type=\"text\" name=\"jobName\" onChange={props.onChange} />\n      </div>\n      <div>\n        <label htmlFor=\"email\" className=\"inputLabel\">\n          Job Alert Email\n        </label>\n        <input type=\"text\" name=\"email\" onChange={props.onChange} />\n      </div>\n      <div>\n        <label htmlFor=\"emailEvent\" className=\"inputLabel\">\n          Email Event\n        </label>\n        <div className=\"buttonGrp\">\n          <button name=\"begin\" className=\"btn\" onClick={props.handleEmailClick}>\n            Begin\n          </button>\n          <button name=\"end\" className=\"btn\" onClick={props.handleEmailClick}>\n            End\n          </button>\n          <button\n            name=\"requeue\"\n            className=\"btn\"\n            onClick={props.handleEmailClick}\n          >\n            Requeue\n          </button>\n          <button name=\"fail\" className=\"btn\" onClick={props.handleEmailClick}>\n            Fail\n          </button>\n          <button name=\"all\" className=\"btn\" onClick={props.handleEmailClick}>\n            All\n          </button>\n        </div>\n      </div>\n      <div>\n        <label htmlFor=\"requeue\">Requeue</label>\n        <button\n          name=\"requeue\"\n          className=\"checkbox\"\n          onClick={props.handleCheckClick}\n        >\n          {props.check}\n        </button>\n      </div>\n      <div>\n        <label htmlFor=\"nodes\" className=\"inputLabel\">\n          Number of nodes\n        </label>\n        <input type=\"text\" name=\"nodes\" onChange={props.onChange} />\n      </div>\n      <div>\n        <label htmlFor=\"ntasksNode\" className=\"inputLabel\">\n          Processes per node\n        </label>\n        <input type=\"text\" name=\"ntasksNode\" onChange={props.onChange} />\n      </div>\n      <div>\n        <label htmlFor=\"ntasks\" className=\"inputLabel\">\n          Total Processes (across all nodes)\n        </label>\n        <input type=\"text\" name=\"ntasks\" onChange={props.onChange} />\n      </div>\n      <div>\n        <label htmlFor=\"memory\" className=\"inputLabel\">\n          RAM per node (default: MB)\n        </label>\n        <div className=\"memBtn\">\n          <input type=\"text\" name=\"memory\" onChange={props.onChange} />\n          <button className=\"btn\" onClick={props.handleGigClick}>\n            GB\n          </button>\n        </div>\n      </div>\n      <div>\n        <label htmlFor=\"output\" className=\"inputLabel\">\n          Standard Output File\n        </label>\n        <input type=\"text\" name=\"output\" onChange={props.onChange} />\n      </div>\n      <div>\n        <label htmlFor=\"error\" className=\"inputLabel\">\n          Standard Error File\n        </label>\n        <input type=\"text\" name=\"error\" onChange={props.onChange} />\n      </div>\n\n      <div>\n        <label htmlFor=\"nodelist\" className=\"inputLabel\">\n          Specific Node to Run\n        </label>\n        <input type=\"text\" name=\"nodelist\" onChange={props.onChange} />\n      </div>\n      <div>\n        <label htmlFor=\"gpu\" className=\"inputLabel\">\n          Number of GPU devices\n        </label>\n        <input type=\"text\" name=\"gpu\" onChange={props.onChange} />\n      </div>\n      <div>\n        <label htmlFor=\"jobArray\" className=\"inputLabel\">\n          Job Array\n        </label>\n        <input type=\"text\" name=\"jobArray\" onChange={props.onChange} />\n      </div>\n    </div>\n  );\n}\n\nexport default JobForm;\n","import React from \"react\";\n\nfunction JobLine(props) {\n  return (\n    <React.Fragment>\n      #SBATCH {props.prefix}\n      {props.value}\n      <br />\n    </React.Fragment>\n  );\n}\n\nexport default JobLine;\n","import React from \"react\";\n\nfunction ModuleLine(props) {\n  // return <React.Fragment>module load {props.value}</React.Fragment>;\n  return (\n    <React.Fragment>\n      module load {props.value}\n      <br />\n    </React.Fragment>\n  );\n}\n\nexport default ModuleLine;\n","import React from \"react\";\nimport JobLine from \"./JobLine\";\nimport ModuleLine from \"./ModuleLine\";\n\nfunction JobScript(props) {\n  const PREFIX_TABLE = {\n    jobName: \"--job-name=\",\n    nodes: \"--nodes=\",\n    ntasks: \"--ntasks=\",\n    ntasksNode: \"--ntasks-per-node=\",\n    partition: \"--partition=\",\n    qos: \"--qos=\",\n    memory: \"--mem=\",\n    output: \"--output=\",\n    error: \"--error=\",\n    email: \"--mail-user=\",\n    emailEvent: \"--mail-type=\",\n    nodelist: \"--nodelist=\",\n    jobArray: \"--array=\",\n    gpu: \"--gres=gpu:\",\n    requeue: \"--requeue\",\n  };\n\n  const { job } = props;\n  const keys = Object.keys(job);\n\n  const renderSbatch = keys.map((key, index) => {\n    let jobValue = job[key];\n    if (key === \"isSbatch\" || key === \"modules\") {\n      return null;\n    } else if (key === \"emailEvent\" && jobValue.length) {\n      return (\n        <JobLine\n          key={index}\n          prefix={PREFIX_TABLE[key]}\n          value={jobValue.join(\",\").toUpperCase()}\n        />\n      );\n    } else if (key === \"requeue\" && jobValue === true) {\n      return <JobLine key={index} prefix={PREFIX_TABLE[key]} />;\n    } else if (jobValue.length) {\n      return (\n        <JobLine key={index} prefix={PREFIX_TABLE[key]} value={jobValue} />\n      );\n    }\n    return null;\n  });\n\n  // const values = Object.entries(props.job).map((key) => {\n  //   if (key[1]) return <JobLine prefix={PREFIX_TABLE[key[0]]} value={key[1]} />;\n  //   return null;\n  // });\n  const renderModule = job.modules.map((value, index) => {\n    return <ModuleLine key={index} value={value} />;\n  });\n  return (\n    <div className=\"jobContainer jobScript\">\n      <div className=\"titleBar\">\n        <p>Slurm Job Template</p>\n      </div>\n      <div className=\"helpBar\">\n        <p>Copy this template to the saliksik cluster</p>\n      </div>\n      <pre>\n        #!/bin/bash\n        <br />\n        {renderSbatch}\n        {/* <JobLine value={props.job.jobName} />\n      <JobLine value={props.job.nodes} /> */}\n        <br />\n        {renderModule}\n      </pre>\n    </div>\n  );\n}\n\nexport default JobScript;\n","import React from \"react\";\n\nexport default function ModuleButton(props) {\n  let buttonClass = \"btn\";\n  if (props.modules.includes(props.module)) {\n    buttonClass += \" btnActive\";\n  }\n  return (\n    <button\n      name={props.module}\n      className={buttonClass}\n      onClick={props.addModulefiles}\n    >\n      {props.module}\n    </button>\n  );\n}\n","import React from \"react\";\nimport cpuModules from \"./cpuModules\";\nimport gpuModules from \"./gpuModules\";\nimport ModuleButton from \"./ModuleButton\";\n\nexport default function ModuleForm(props) {\n  const cpuModuleArray = cpuModules.cpuModules;\n  const gpuModuleArray = gpuModules.gpuModules;\n  // console.log(cpuModuleArray.length);\n  // const renderModules = () => {\n  //   for (let cpuModule of cpuModuleArray) {\n  //     return <ModuleButton module={cpuModule} />;\n  //   }\n  // };\n  const renderCpuModules = cpuModuleArray.map((key, index) => {\n    let cpuModule = key;\n    return (\n      <ModuleButton\n        key={index}\n        module={cpuModule}\n        addModulefiles={props.addModulefiles}\n        modules={props.modules}\n      />\n    );\n  });\n\n  const renderGpuModules = gpuModuleArray.map((key, index) => {\n    let gpuModule = key;\n    return (\n      <ModuleButton\n        key={index}\n        module={gpuModule}\n        addModulefiles={props.addModulefiles}\n        modules={props.modules}\n      />\n    );\n  });\n\n  let cpuBtn = \"btn\",\n    gpuBtn = \"btn\";\n  if (props.isModulesCpu) {\n    cpuBtn += \" btnActive\";\n    gpuBtn = \"btn\";\n  } else {\n    gpuBtn += \" btnActive\";\n    cpuBtn = \"btn\";\n  }\n  return (\n    <div className={\"jobContainer jobForm \" + props.hidden}>\n      <div className=\"configTitle\">\n        <h3>Module Environments</h3>\n        <button className=\"btn viewBtn\" onClick={props.changeView}>\n          SBATCH Config\n        </button>\n      </div>\n      <div className=\"btnGrp\">\n        <button className={cpuBtn} onClick={props.toggleCpuModules}>\n          Show CPU Modules\n        </button>\n        |&nbsp;\n        <button className={gpuBtn} onClick={props.toggleGpuModules}>\n          Show GPU Modules\n        </button>\n      </div>\n      <hr />\n      {props.isModulesCpu ? renderCpuModules : renderGpuModules}\n    </div>\n  );\n}\n","import React from \"react\";\nimport JobForm from \"./JobForm\";\nimport JobScript from \"./JobScript\";\nimport ModuleForm from \"./ModuleForm\";\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      partition: \"\",\n      qos: \"\",\n      jobName: \"\",\n      email: \"\",\n      emailEvent: [],\n      isSbatch: true,\n      modules: [],\n      isModulesCpu: true,\n    };\n    this.check = \"\\u00a0\";\n    this.sbatchHide = \"\";\n    this.moduleHide = \"hidden\";\n    this.handleChange = this.handleChange.bind(this);\n    this.handlePartitionClick = this.handlePartitionClick.bind(this);\n    this.handleGigClick = this.handleGigClick.bind(this);\n    this.handleEmailClick = this.handleEmailClick.bind(this);\n    this.handleCheckClick = this.handleCheckClick.bind(this);\n    this.addModulefiles = this.addModulefiles.bind(this);\n    this.changeView = this.changeView.bind(this);\n    this.toggleCpuModules = this.toggleCpuModules.bind(this);\n    this.toggleGpuModules = this.toggleGpuModules.bind(this);\n  }\n  handleChange(event) {\n    const { name, value } = event.target;\n    console.log(name, value);\n    this.setState({ [name]: value });\n  }\n  handleClickActive(event) {\n    let buttons = this.inputEl.current.children;\n    for (let button of buttons) {\n      button.className = \"btn\";\n    }\n    event.target.className += \" btnActive\";\n  }\n  handleGigClick(event) {\n    let memory = this.state.memory.slice();\n    let btnCss = \"btn\";\n    if (!memory) {\n      return null;\n    } else if (memory.includes(\"G\")) {\n      memory = memory.slice(0, -1);\n    } else {\n      memory = memory + \"G\";\n      btnCss += \" btnActive\";\n    }\n    event.target.className = btnCss;\n    this.setState({ memory: memory });\n  }\n  handlePartitionClick(event) {\n    const { name, parentElement } = event.target;\n    const buttons = parentElement.children;\n    for (let button of buttons) {\n      button.className = \"btn\";\n    }\n    if (this.state.partition && this.state.partition === name) {\n      return this.setState({ partition: \"\", qos: \"\" });\n    }\n    event.target.className += \" btnActive\";\n    let qos;\n    switch (name) {\n      case \"debug\":\n        qos = \"240c-1h_debug\";\n        break;\n      case \"batch\":\n        qos = \"240c-1h_batch\";\n        break;\n      case \"gpu\":\n        qos = \"12c-1h_2gpu\";\n        break;\n      case \"serial\":\n        qos = \"84c-1d_serial\";\n        break;\n      default:\n        break;\n    }\n    this.setState({ partition: name, qos: qos });\n    //this.handleClickActive(event);\n  }\n  handleEmailClick(event) {\n    const { name, parentElement } = event.target;\n    const stateEmail = this.state.emailEvent;\n    let emailEvent;\n\n    // CSS\n    const buttons = parentElement.children;\n\n    if (name === \"all\" && !stateEmail.includes(name)) {\n      // if selection is \"all\" and \"all\" does not exist\n      emailEvent = stateEmail.slice(stateEmail.length).concat(name);\n      for (let button of buttons) {\n        button.className = \"btn btnActive\";\n      }\n    } else if (name === \"all\") {\n      // selection is all and it exists\n      emailEvent = stateEmail.slice(stateEmail.length);\n      for (let button of buttons) {\n        button.className = \"btn\";\n      }\n    } else if (stateEmail.includes(\"all\")) {\n      // array contains all\n      emailEvent = stateEmail.slice();\n    } else if (stateEmail.includes(name)) {\n      // selection already exists\n      emailEvent = stateEmail.slice().filter((email) => email !== name);\n      event.target.className = \"btn\";\n    } else {\n      // selection doesn't exist\n      emailEvent = stateEmail.slice().concat(name);\n      event.target.className = \"btn btnActive\";\n    }\n    this.setState({ emailEvent: emailEvent });\n  }\n  handleCheckClick(event) {\n    if (!this.state.requeue) {\n      this.setState({ requeue: true });\n      event.target.className = \"checkbox btnActive\";\n      this.check = \"\\u2713\";\n    } else {\n      event.target.className = \"checkbox\";\n      this.setState({ requeue: false });\n      this.check = \"\\u00a0\";\n    }\n  }\n\n  addModulefiles(event) {\n    const { name } = event.target;\n    let modules = this.state.modules.slice();\n    if (modules.includes(name)) {\n      modules = modules.filter((module) => module !== name);\n      // event.target.className = \"btn\";\n      this.setState({ modules: modules });\n    } else {\n      // event.target.className = \"btn btnActive\";\n      this.setState({ modules: modules.concat(name) });\n    }\n  }\n\n  changeView() {\n    let isSbatch = this.state.isSbatch;\n    this.setState({ isSbatch: !isSbatch });\n    if (!isSbatch) {\n      this.moduleHide = \"hidden\";\n      this.sbatchHide = \"\";\n    } else {\n      this.moduleHide = \"\";\n      this.sbatchHide = \"hidden\";\n    }\n  }\n\n  toggleCpuModules() {\n    this.setState({ isModulesCpu: true });\n  }\n\n  toggleGpuModules() {\n    this.setState({ isModulesCpu: false });\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Job Settings</h2>\n        <div className=\"jobWrapper\">\n          {/* {this.state.isSbatch ? (\n            <JobForm\n              onChange={this.handleChange}\n              handlePartitionClick={this.handlePartitionClick}\n              handleGigClick={this.handleGigClick}\n              handleEmailClick={this.handleEmailClick}\n              handleEmailAllClick={this.handleEmailAllClick}\n              handleCheckClick={this.handleCheckClick}\n              check={this.check}\n              changeView={this.changeView}\n              hidden=\"hidden\"\n            />\n          ) : (\n            <ModuleForm\n              changeView={this.changeView}\n              addModulefiles={this.addModulefiles}\n            />\n          )} */}\n          <JobForm\n            onChange={this.handleChange}\n            handlePartitionClick={this.handlePartitionClick}\n            handleGigClick={this.handleGigClick}\n            handleEmailClick={this.handleEmailClick}\n            handleEmailAllClick={this.handleEmailAllClick}\n            handleCheckClick={this.handleCheckClick}\n            check={this.check}\n            changeView={this.changeView}\n            hidden={this.sbatchHide}\n          />\n          <ModuleForm\n            changeView={this.changeView}\n            addModulefiles={this.addModulefiles}\n            hidden={this.moduleHide}\n            modules={this.state.modules}\n            isModulesCpu={this.state.isModulesCpu}\n            toggleCpuModules={this.toggleCpuModules}\n            toggleGpuModules={this.toggleGpuModules}\n          />\n          <JobScript className=\"hidden\" job={this.state} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import React from \"react\";\nimport { Header } from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Header />\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  /* </React.StrictMode>, */\n  document.getElementById('root')\n);\n\n\n","exports.cpuModules = [\n  \"anaconda/2-5.3.1\",\n  \"anaconda/3-5.3.1\",\n  \"autodock/4.2.6_openmpi-4.0.3\",\n  \"bcftools/1.10.2\",\n  \"binutils/2.34\",\n  \"bwa/0.7.17\",\n  \"bzip2/1.0.8_gcc-8.4.0\",\n  \"cmake/3.17.0.rc3_gcc-8.4.0\",\n  \"curl/7.69.1\",\n  \"curl/7.69.1_gcc-8.4.0\",\n  \"fast-tk/0.0.13\",\n  \"fastp/0.20.0\",\n  \"fftw/3.3.8\",\n  \"gawk/5.0.1\",\n  \"gcc/8.4.0\",\n  \"gettext/0.20\",\n  \"gmp/6.2.0\",\n  \"gnuplot/5.2.4\",\n  \"gromacs/2020.1_openmpi-4.0.3\",\n  \"hdf5/1.12.0\",\n  \"hdf5/1.12.0_openmpi-4.0.2\",\n  \"hpl/2.3\",\n  \"isl/0.14\",\n  \"isl/0.18\",\n  \"jasper/2.0.16\",\n  \"java/1.8.0\",\n  \"jmodeltest/2.1.10\",\n  \"libjpeg/2.0.4\",\n  \"libpng/1.6.37\",\n  \"libtiff/4.1.0\",\n  \"lzip/1.21\",\n  \"mafft/7.453.0\",\n  \"make/4.3\",\n  \"matlab/R2019a\",\n  \"mdtraj/1.9.3\",\n  \"mpc/1.1.0\",\n  \"mpfr/4.0.2\",\n  \"mpich/3.3.2\",\n  \"namd/2.13.0\",\n  \"nco/4.6.1\",\n  \"netcdf-fortran/4.5.2\",\n  \"netcdf/4.7.3\",\n  \"netcdf/4.7.4_openmpi-4.0.2\",\n  \"nodejs/10.0.0\",\n  \"nwchem/7.0.0\",\n  \"nwchem/7.0.0_singularity\",\n  \"openmpi/4.0.2\",\n  \"openmpi/4.0.3_gcc-8.4.0\",\n  \"paml/4.9.0\",\n  \"perl/5.30.2\",\n  \"phyml/3.3.2019\",\n  \"picard/2.22.1\",\n  \"prank/17.04.27\",\n  \"python/3.8.2\",\n  \"qe/6.4.1p_openmpi-4.0.3\",\n  \"qe/6.5_openmpi-4.0.3\",\n  \"raxml/8.2.12\",\n  \"regcm/4.7.0\",\n  \"regcm/4.7.0_bats\",\n  \"regcm/4.7.0_clm\",\n  \"regcm/4.7.0_clm-4.5\",\n  \"ruby/2.7.0\",\n  \"samtools/1.10\",\n  \"scilab/6.1.0\",\n  \"singularity/rstudio-server-1.2.5033\",\n  \"spades/3.14.0\",\n  \"sqlite/3.31.1\",\n  \"sra_tools/2.10.5\",\n  \"texinfo/6.3\",\n  \"vcftools/0.1.6\",\n  \"vmd/1.9.3\",\n  \"wgrib/1.8.0\",\n  \"wgrib/2.0.7\",\n  \"wgrib/2.0.8\",\n  \"wtbg/2.5.0\",\n  \"xz/5.2.4_gcc-8.4.0\",\n  \"zlib/1.2.11_gcc-8.4.0\",\n];\n","exports.gpuModules = [\n  \"cuda/10.1_cudnn-7.6.5\",\n  \"openmpi/4.0.3_cuda-10.1\",\n  \"pgi/cuda/10.1\",\n  \"cuda/8.0_cudnn-6.0\",\n  \"openmpi/4.0.3_pgi-19.10\",\n  \"pgi/cuda/9.2\",\n  \"gromacs/2020.1_cuda-10.1\",\n  \"pgi/19.10\",\n  \"pgi/openmpi/3.1.3\",\n  \"namd/2.13\",\n  \"pgi/cuda/10.0\",\n  \"qe/6.5_pgi-19.10_openmpi-3.1.3\",\n];\n"],"sourceRoot":""}